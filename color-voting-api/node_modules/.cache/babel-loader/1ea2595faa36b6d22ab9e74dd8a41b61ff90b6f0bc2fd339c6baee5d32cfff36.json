{"ast":null,"code":"var _jsxFileName = \"/workspaces/resume-template/color-voting-api/src/ColorVotingAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ENDPOINT = 'https://ckx7nhnyf2.execute-api.us-east-2.amazonaws.com/Production';\nconst rainbowColors = [{\n  name: 'Red',\n  hex: '#FF0000'\n}, {\n  name: 'Orange',\n  hex: '#FF7F00'\n}, {\n  name: 'Yellow',\n  hex: '#FFFF00'\n}, {\n  name: 'Chartreuse Green',\n  hex: '#7FFF00'\n}, {\n  name: 'Green',\n  hex: '#00FF00'\n}, {\n  name: 'Spring Green',\n  hex: '#00FF7F'\n}, {\n  name: 'Cyan',\n  hex: '#00FFFF'\n}, {\n  name: 'Azure',\n  hex: '#007FFF'\n}, {\n  name: 'Blue',\n  hex: '#0000FF'\n}, {\n  name: 'Violet',\n  hex: '#8B00FF'\n}, {\n  name: 'Magenta',\n  hex: '#FF00FF'\n}, {\n  name: 'Rose',\n  hex: '#FF007F'\n}];\nfunction ColorVotingAPI() {\n  _s();\n  const colorWheelRef = useRef(null);\n  const selectedColorRef = useRef(null);\n  const colorInfoRef = useRef(null);\n  const voteButtonRef = useRef(null);\n  const loadingRef = useRef(null);\n  const resultsContainerRef = useRef(null);\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Helper to draw the color wheel\n  function drawColorWheel(canvas, ctx) {\n    ctx.clearRect(0, 0, 300, 300);\n    const arcWidth = 40;\n    const outerRadius = 140;\n    const innerRadius = outerRadius - arcWidth;\n    const centerX = 150;\n    const centerY = 180;\n    const total = rainbowColors.length;\n    const startAngle = Math.PI;\n    const endAngle = 2 * Math.PI;\n    const angleStep = (endAngle - startAngle) / total;\n    ctx._rainbowArcs = [];\n    for (let i = 0; i < total; i++) {\n      const color = rainbowColors[i];\n      const arcStart = startAngle + i * angleStep;\n      const arcEnd = arcStart + angleStep;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, outerRadius, arcStart, arcEnd, false);\n      ctx.arc(centerX, centerY, innerRadius, arcEnd, arcStart, true);\n      ctx.closePath();\n      ctx.fillStyle = color.hex;\n      ctx.fill();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n      ctx._rainbowArcs.push({\n        start: arcStart,\n        end: arcEnd,\n        innerRadius,\n        outerRadius,\n        hex: color.hex,\n        name: color.name\n      });\n    }\n  }\n\n  // Handle color selection\n  function handleColorSelection(event, ctx) {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const dx = x - 150;\n    const dy = y - 180;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    let angle = Math.atan2(dy, dx);\n    if (angle < 0) angle += 2 * Math.PI;\n    for (const arc of ctx._rainbowArcs) {\n      if (dist >= arc.innerRadius && dist <= arc.outerRadius && angle >= arc.start && angle <= arc.end) {\n        setSelectedColor(arc.hex);\n        if (selectedColorRef.current) selectedColorRef.current.style.backgroundColor = arc.hex;\n        if (colorInfoRef.current) colorInfoRef.current.textContent = `Selected: ${arc.name}`;\n        if (voteButtonRef.current) voteButtonRef.current.disabled = false;\n        break;\n      }\n    }\n  }\n\n  // Send vote to API\n  async function sendVote() {\n    if (!selectedColor) {\n      alert('Please select a color first');\n      return;\n    }\n    const colorValue = selectedColor.substring(1);\n    try {\n      setIsLoading(true);\n      if (voteButtonRef.current) voteButtonRef.current.disabled = true;\n      const response = await fetch(`${API_ENDPOINT}/vote`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          color: colorValue\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const colorObj = rainbowColors.find(c => c.hex.toUpperCase() === selectedColor.toUpperCase());\n      const colorName = colorObj ? colorObj.name : selectedColor;\n      alert(`${colorName} has been added to the voting results!`);\n      await getVotingResults();\n    } catch (error) {\n      console.error('Error sending vote:', error);\n      alert('Failed to send vote. Please try again.');\n    } finally {\n      setIsLoading(false);\n      if (voteButtonRef.current) voteButtonRef.current.disabled = false;\n    }\n  }\n\n  // Get current voting results\n  async function getVotingResults() {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`${API_ENDPOINT}/votes`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      displayResults(data);\n    } catch (error) {\n      console.error('Error getting results:', error);\n      if (resultsContainerRef.current) {\n        resultsContainerRef.current.innerHTML = '<p>Failed to load results</p>';\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  // Display voting results as a rainbow\n  function displayResults(data) {\n    if (!resultsContainerRef.current) return;\n    let oldCanvas = document.getElementById('rainbowResultsCanvas');\n    if (oldCanvas) oldCanvas.remove();\n    let tooltip = document.getElementById('rainbowTooltip');\n    if (tooltip) tooltip.remove();\n    let totalVotes = 0;\n    for (const color in data) totalVotes += data[color];\n    const sortedColors = rainbowColors.map(c => {\n      const hex = c.hex.replace('#', '').toUpperCase();\n      const key = Object.keys(data).find(k => k.toUpperCase() === hex) || hex;\n      return {\n        ...c,\n        votes: data[key] || 0,\n        hexKey: key\n      };\n    });\n    const width = 500;\n    const height = 250;\n    const centerX = width / 2;\n    const centerY = height * 1.1;\n    const outerRadius = height * 0.95;\n    const innerRadius = height * 0.45;\n    const canvas = document.createElement('canvas');\n    canvas.id = 'rainbowResultsCanvas';\n    canvas.width = width;\n    canvas.height = height;\n    resultsContainerRef.current.innerHTML = '';\n    resultsContainerRef.current.appendChild(canvas);\n    tooltip = document.createElement('div');\n    tooltip.id = 'rainbowTooltip';\n    document.body.appendChild(tooltip);\n    let startAngle = Math.PI;\n    const ctx = canvas.getContext('2d');\n    canvas._arcs = [];\n    sortedColors.forEach(colorObj => {\n      const votes = colorObj.votes;\n      if (votes === 0) return;\n      const percentage = totalVotes > 0 ? votes / totalVotes : 0;\n      const arcAngle = Math.PI * percentage;\n      const hexColor = colorObj.hex;\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, outerRadius, startAngle, startAngle + arcAngle, false);\n      ctx.arc(centerX, centerY, innerRadius, startAngle + arcAngle, startAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = hexColor;\n      ctx.fill();\n      canvas._arcs.push({\n        start: startAngle,\n        end: startAngle + arcAngle,\n        color: hexColor,\n        name: colorObj.name,\n        votes: votes\n      });\n      startAngle += arcAngle;\n    });\n    canvas.addEventListener('mousemove', function (e) {\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const dx = x - centerX;\n      const dy = y - centerY;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      let angle = Math.atan2(dy, dx);\n      if (angle < 0) angle += 2 * Math.PI;\n      let found = false;\n      if (dist >= innerRadius && dist <= outerRadius && angle >= Math.PI && angle <= 2 * Math.PI && canvas._arcs) {\n        for (const arc of canvas._arcs) {\n          if (angle >= arc.start && angle <= arc.end) {\n            tooltip.style.display = 'block';\n            tooltip.textContent = `${arc.name}: ${arc.votes} vote${arc.votes === 1 ? '' : 's'}`;\n            tooltip.style.left = e.pageX + 10 + 'px';\n            tooltip.style.top = e.pageY - 10 + 'px';\n            found = true;\n            break;\n          }\n        }\n      }\n      if (!found) {\n        tooltip.style.display = 'none';\n      }\n    });\n    canvas.addEventListener('mouseleave', function () {\n      tooltip.style.display = 'none';\n    });\n  }\n\n  // Setup color wheel and results on mount\n  useEffect(() => {\n    // Color Wheel\n    if (colorWheelRef.current) {\n      colorWheelRef.current.innerHTML = '';\n      const canvas = document.createElement('canvas');\n      canvas.width = 300;\n      canvas.height = 300;\n      colorWheelRef.current.appendChild(canvas);\n      const ctx = canvas.getContext('2d');\n      drawColorWheel(canvas, ctx);\n\n      // Tooltip\n      let wheelTooltip = document.getElementById('colorWheelTooltip');\n      if (!wheelTooltip) {\n        wheelTooltip = document.createElement('div');\n        wheelTooltip.id = 'colorWheelTooltip';\n        wheelTooltip.style.position = 'absolute';\n        wheelTooltip.style.display = 'none';\n        wheelTooltip.style.background = '#222';\n        wheelTooltip.style.color = '#fff';\n        wheelTooltip.style.padding = '4px 10px';\n        wheelTooltip.style.borderRadius = '5px';\n        wheelTooltip.style.fontSize = '16px';\n        wheelTooltip.style.pointerEvents = 'none';\n        wheelTooltip.style.zIndex = 1000;\n        document.body.appendChild(wheelTooltip);\n      }\n      canvas.addEventListener('mousemove', function (event) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const dx = x - 150;\n        const dy = y - 180;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        let angle = Math.atan2(dy, dx);\n        if (angle < 0) angle += 2 * Math.PI;\n        let found = false;\n        for (const arc of ctx._rainbowArcs) {\n          if (dist >= arc.innerRadius && dist <= arc.outerRadius && angle >= arc.start && angle <= arc.end) {\n            wheelTooltip.style.display = 'block';\n            wheelTooltip.textContent = arc.name;\n            wheelTooltip.style.left = event.pageX + 10 + 'px';\n            wheelTooltip.style.top = event.pageY - 10 + 'px';\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          wheelTooltip.style.display = 'none';\n        }\n      });\n      canvas.addEventListener('mouseleave', function () {\n        wheelTooltip.style.display = 'none';\n      });\n      canvas.addEventListener('click', e => handleColorSelection(e, ctx));\n    }\n\n    // Results\n    getVotingResults();\n\n    // Cleanup tooltips on unmount\n    return () => {\n      let wheelTooltip = document.getElementById('colorWheelTooltip');\n      if (wheelTooltip) wheelTooltip.remove();\n      let rainbowTooltip = document.getElementById('rainbowTooltip');\n      if (rainbowTooltip) rainbowTooltip.remove();\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  // Disable vote button if no color selected\n  useEffect(() => {\n    if (voteButtonRef.current) {\n      voteButtonRef.current.disabled = !selectedColor;\n    }\n    if (!selectedColor && selectedColorRef.current) {\n      selectedColorRef.current.style.backgroundColor = \"#fff\";\n    }\n  }, [selectedColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        position: \"absolute\",\n        top: 20,\n        right: 30,\n        zIndex: 2000,\n        background: \"#4CAF50\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: 6,\n        padding: \"10px 18px\",\n        fontSize: 15,\n        fontWeight: 600,\n        cursor: \"pointer\",\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.08)\",\n        transition: \"background 0.2s\"\n      },\n      onClick: () => {\n        // Download functionality can be implemented here if needed\n      },\n      children: \"Download This Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick Your Favorite Color!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"colorWheel\",\n      ref: colorWheelRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"selectedColor\",\n      ref: selectedColorRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"colorInfo\",\n      ref: colorInfoRef,\n      children: \"No color selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"voteButton\",\n      ref: voteButtonRef,\n      onClick: sendVote,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loading\",\n      ref: loadingRef,\n      className: \"loading\",\n      style: {\n        display: isLoading ? \"block\" : \"none\"\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Vote Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"resultsContainer\",\n        ref: resultsContainerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toolsUsed\",\n      style: {\n        margin: \"30px 0\",\n        width: \"80%\",\n        maxWidth: 600,\n        background: \"#fffbe7\",\n        borderRadius: 10,\n        boxShadow: \"0 2px 10px rgba(0,0,0,0.05)\",\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Tools Used\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          fontSize: 17,\n          color: \"#444\",\n          lineHeight: 1.7\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"HTML5 & CSS3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Vanilla JavaScript (ES6+)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Canvas API (for drawing rainbow and results)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"AWS Lambda & API Gateway (for backend API)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"AWS DynamoDB (for vote storage)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Fetch API (for HTTP requests)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"VS Code (for development)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n}\n_s(ColorVotingAPI, \"LCwpwBq+ZMPaQvETUvQsdTofdKI=\");\n_c = ColorVotingAPI;\nexport default ColorVotingAPI;\nvar _c;\n$RefreshReg$(_c, \"ColorVotingAPI\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","API_ENDPOINT","rainbowColors","name","hex","ColorVotingAPI","_s","colorWheelRef","selectedColorRef","colorInfoRef","voteButtonRef","loadingRef","resultsContainerRef","selectedColor","setSelectedColor","isLoading","setIsLoading","drawColorWheel","canvas","ctx","clearRect","arcWidth","outerRadius","innerRadius","centerX","centerY","total","length","startAngle","Math","PI","endAngle","angleStep","_rainbowArcs","i","color","arcStart","arcEnd","beginPath","arc","closePath","fillStyle","fill","strokeStyle","lineWidth","stroke","push","start","end","handleColorSelection","event","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","dx","dy","dist","sqrt","angle","atan2","current","style","backgroundColor","textContent","disabled","sendVote","alert","colorValue","substring","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","colorObj","find","c","toUpperCase","colorName","getVotingResults","error","console","displayResults","innerHTML","oldCanvas","document","getElementById","remove","tooltip","totalVotes","sortedColors","map","replace","key","Object","keys","k","votes","hexKey","width","height","createElement","id","appendChild","getContext","_arcs","forEach","percentage","arcAngle","hexColor","addEventListener","e","found","display","pageX","pageY","wheelTooltip","position","background","padding","borderRadius","fontSize","pointerEvents","zIndex","rainbowTooltip","children","right","border","fontWeight","cursor","boxShadow","transition","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","margin","maxWidth","marginTop","lineHeight","_c","$RefreshReg$"],"sources":["/workspaces/resume-template/color-voting-api/src/ColorVotingAPI.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"./styles.css\";\n\nconst API_ENDPOINT = 'https://ckx7nhnyf2.execute-api.us-east-2.amazonaws.com/Production';\n\nconst rainbowColors = [\n  { name: 'Red', hex: '#FF0000' },\n  { name: 'Orange', hex: '#FF7F00' },\n  { name: 'Yellow', hex: '#FFFF00' },\n  { name: 'Chartreuse Green', hex: '#7FFF00' },\n  { name: 'Green', hex: '#00FF00' },\n  { name: 'Spring Green', hex: '#00FF7F' },\n  { name: 'Cyan', hex: '#00FFFF' },\n  { name: 'Azure', hex: '#007FFF' },\n  { name: 'Blue', hex: '#0000FF' },\n  { name: 'Violet', hex: '#8B00FF' },\n  { name: 'Magenta', hex: '#FF00FF' },\n  { name: 'Rose', hex: '#FF007F' }\n];\n\nfunction ColorVotingAPI() {\n  const colorWheelRef = useRef(null);\n  const selectedColorRef = useRef(null);\n  const colorInfoRef = useRef(null);\n  const voteButtonRef = useRef(null);\n  const loadingRef = useRef(null);\n  const resultsContainerRef = useRef(null);\n\n  const [selectedColor, setSelectedColor] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Helper to draw the color wheel\n  function drawColorWheel(canvas, ctx) {\n    ctx.clearRect(0, 0, 300, 300);\n    const arcWidth = 40;\n    const outerRadius = 140;\n    const innerRadius = outerRadius - arcWidth;\n    const centerX = 150;\n    const centerY = 180;\n    const total = rainbowColors.length;\n    const startAngle = Math.PI;\n    const endAngle = 2 * Math.PI;\n    const angleStep = (endAngle - startAngle) / total;\n\n    ctx._rainbowArcs = [];\n\n    for (let i = 0; i < total; i++) {\n      const color = rainbowColors[i];\n      const arcStart = startAngle + i * angleStep;\n      const arcEnd = arcStart + angleStep;\n\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, outerRadius, arcStart, arcEnd, false);\n      ctx.arc(centerX, centerY, innerRadius, arcEnd, arcStart, true);\n      ctx.closePath();\n      ctx.fillStyle = color.hex;\n      ctx.fill();\n      ctx.strokeStyle = '#fff';\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      ctx._rainbowArcs.push({\n        start: arcStart,\n        end: arcEnd,\n        innerRadius,\n        outerRadius,\n        hex: color.hex,\n        name: color.name\n      });\n    }\n  }\n\n  // Handle color selection\n  function handleColorSelection(event, ctx) {\n    const rect = event.target.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    const dx = x - 150;\n    const dy = y - 180;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    let angle = Math.atan2(dy, dx);\n    if (angle < 0) angle += 2 * Math.PI;\n\n    for (const arc of ctx._rainbowArcs) {\n      if (\n        dist >= arc.innerRadius &&\n        dist <= arc.outerRadius &&\n        angle >= arc.start &&\n        angle <= arc.end\n      ) {\n        setSelectedColor(arc.hex);\n        if (selectedColorRef.current) selectedColorRef.current.style.backgroundColor = arc.hex;\n        if (colorInfoRef.current) colorInfoRef.current.textContent = `Selected: ${arc.name}`;\n        if (voteButtonRef.current) voteButtonRef.current.disabled = false;\n        break;\n      }\n    }\n  }\n\n  // Send vote to API\n  async function sendVote() {\n    if (!selectedColor) {\n      alert('Please select a color first');\n      return;\n    }\n    const colorValue = selectedColor.substring(1);\n\n    try {\n      setIsLoading(true);\n      if (voteButtonRef.current) voteButtonRef.current.disabled = true;\n\n      const response = await fetch(`${API_ENDPOINT}/vote`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify({\n          color: colorValue,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      const colorObj = rainbowColors.find(c => c.hex.toUpperCase() === selectedColor.toUpperCase());\n      const colorName = colorObj ? colorObj.name : selectedColor;\n      alert(`${colorName} has been added to the voting results!`);\n\n      await getVotingResults();\n    } catch (error) {\n      console.error('Error sending vote:', error);\n      alert('Failed to send vote. Please try again.');\n    } finally {\n      setIsLoading(false);\n      if (voteButtonRef.current) voteButtonRef.current.disabled = false;\n    }\n  }\n\n  // Get current voting results\n  async function getVotingResults() {\n    try {\n      setIsLoading(true);\n\n      const response = await fetch(`${API_ENDPOINT}/votes`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      displayResults(data);\n    } catch (error) {\n      console.error('Error getting results:', error);\n      if (resultsContainerRef.current) {\n        resultsContainerRef.current.innerHTML = '<p>Failed to load results</p>';\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  // Display voting results as a rainbow\n  function displayResults(data) {\n    if (!resultsContainerRef.current) return;\n    let oldCanvas = document.getElementById('rainbowResultsCanvas');\n    if (oldCanvas) oldCanvas.remove();\n\n    let tooltip = document.getElementById('rainbowTooltip');\n    if (tooltip) tooltip.remove();\n\n    let totalVotes = 0;\n    for (const color in data) totalVotes += data[color];\n\n    const sortedColors = rainbowColors.map(c => {\n      const hex = c.hex.replace('#', '').toUpperCase();\n      const key = Object.keys(data).find(k => k.toUpperCase() === hex) || hex;\n      return {\n        ...c,\n        votes: data[key] || 0,\n        hexKey: key\n      };\n    });\n\n    const width = 500;\n    const height = 250;\n    const centerX = width / 2;\n    const centerY = height * 1.1;\n    const outerRadius = height * 0.95;\n    const innerRadius = height * 0.45;\n\n    const canvas = document.createElement('canvas');\n    canvas.id = 'rainbowResultsCanvas';\n    canvas.width = width;\n    canvas.height = height;\n    resultsContainerRef.current.innerHTML = '';\n    resultsContainerRef.current.appendChild(canvas);\n\n    tooltip = document.createElement('div');\n    tooltip.id = 'rainbowTooltip';\n    document.body.appendChild(tooltip);\n\n    let startAngle = Math.PI;\n    const ctx = canvas.getContext('2d');\n    canvas._arcs = [];\n    sortedColors.forEach((colorObj) => {\n      const votes = colorObj.votes;\n      if (votes === 0) return;\n      const percentage = totalVotes > 0 ? votes / totalVotes : 0;\n      const arcAngle = Math.PI * percentage;\n      const hexColor = colorObj.hex;\n\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, outerRadius, startAngle, startAngle + arcAngle, false);\n      ctx.arc(centerX, centerY, innerRadius, startAngle + arcAngle, startAngle, true);\n      ctx.closePath();\n      ctx.fillStyle = hexColor;\n      ctx.fill();\n\n      canvas._arcs.push({\n        start: startAngle,\n        end: startAngle + arcAngle,\n        color: hexColor,\n        name: colorObj.name,\n        votes: votes\n      });\n\n      startAngle += arcAngle;\n    });\n\n    canvas.addEventListener('mousemove', function (e) {\n      const rect = canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      const dx = x - centerX;\n      const dy = y - centerY;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      let angle = Math.atan2(dy, dx);\n      if (angle < 0) angle += 2 * Math.PI;\n\n      let found = false;\n      if (\n        dist >= innerRadius &&\n        dist <= outerRadius &&\n        angle >= Math.PI &&\n        angle <= 2 * Math.PI &&\n        canvas._arcs\n      ) {\n        for (const arc of canvas._arcs) {\n          if (angle >= arc.start && angle <= arc.end) {\n            tooltip.style.display = 'block';\n            tooltip.textContent = `${arc.name}: ${arc.votes} vote${arc.votes === 1 ? '' : 's'}`;\n            tooltip.style.left = (e.pageX + 10) + 'px';\n            tooltip.style.top = (e.pageY - 10) + 'px';\n            found = true;\n            break;\n          }\n        }\n      }\n      if (!found) {\n        tooltip.style.display = 'none';\n      }\n    });\n\n    canvas.addEventListener('mouseleave', function () {\n      tooltip.style.display = 'none';\n    });\n  }\n\n  // Setup color wheel and results on mount\n  useEffect(() => {\n    // Color Wheel\n    if (colorWheelRef.current) {\n      colorWheelRef.current.innerHTML = '';\n      const canvas = document.createElement('canvas');\n      canvas.width = 300;\n      canvas.height = 300;\n      colorWheelRef.current.appendChild(canvas);\n\n      const ctx = canvas.getContext('2d');\n      drawColorWheel(canvas, ctx);\n\n      // Tooltip\n      let wheelTooltip = document.getElementById('colorWheelTooltip');\n      if (!wheelTooltip) {\n        wheelTooltip = document.createElement('div');\n        wheelTooltip.id = 'colorWheelTooltip';\n        wheelTooltip.style.position = 'absolute';\n        wheelTooltip.style.display = 'none';\n        wheelTooltip.style.background = '#222';\n        wheelTooltip.style.color = '#fff';\n        wheelTooltip.style.padding = '4px 10px';\n        wheelTooltip.style.borderRadius = '5px';\n        wheelTooltip.style.fontSize = '16px';\n        wheelTooltip.style.pointerEvents = 'none';\n        wheelTooltip.style.zIndex = 1000;\n        document.body.appendChild(wheelTooltip);\n      }\n\n      canvas.addEventListener('mousemove', function (event) {\n        const rect = canvas.getBoundingClientRect();\n        const x = event.clientX - rect.left;\n        const y = event.clientY - rect.top;\n        const dx = x - 150;\n        const dy = y - 180;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        let angle = Math.atan2(dy, dx);\n        if (angle < 0) angle += 2 * Math.PI;\n\n        let found = false;\n        for (const arc of ctx._rainbowArcs) {\n          if (\n            dist >= arc.innerRadius &&\n            dist <= arc.outerRadius &&\n            angle >= arc.start &&\n            angle <= arc.end\n          ) {\n            wheelTooltip.style.display = 'block';\n            wheelTooltip.textContent = arc.name;\n            wheelTooltip.style.left = (event.pageX + 10) + 'px';\n            wheelTooltip.style.top = (event.pageY - 10) + 'px';\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          wheelTooltip.style.display = 'none';\n        }\n      });\n\n      canvas.addEventListener('mouseleave', function () {\n        wheelTooltip.style.display = 'none';\n      });\n\n      canvas.addEventListener('click', (e) => handleColorSelection(e, ctx));\n    }\n\n    // Results\n    getVotingResults();\n\n    // Cleanup tooltips on unmount\n    return () => {\n      let wheelTooltip = document.getElementById('colorWheelTooltip');\n      if (wheelTooltip) wheelTooltip.remove();\n      let rainbowTooltip = document.getElementById('rainbowTooltip');\n      if (rainbowTooltip) rainbowTooltip.remove();\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  // Disable vote button if no color selected\n  useEffect(() => {\n    if (voteButtonRef.current) {\n      voteButtonRef.current.disabled = !selectedColor;\n    }\n    if (!selectedColor && selectedColorRef.current) {\n      selectedColorRef.current.style.backgroundColor = \"#fff\";\n    }\n  }, [selectedColor]);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <button\n        style={{\n          position: \"absolute\",\n          top: 20,\n          right: 30,\n          zIndex: 2000,\n          background: \"#4CAF50\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: 6,\n          padding: \"10px 18px\",\n          fontSize: 15,\n          fontWeight: 600,\n          cursor: \"pointer\",\n          boxShadow: \"0 2px 8px rgba(0,0,0,0.08)\",\n          transition: \"background 0.2s\",\n        }}\n        onClick={() => {\n          // Download functionality can be implemented here if needed\n        }}\n      >\n        Download This Project\n      </button>\n      <h1>Pick Your Favorite Color!</h1>\n      <div id=\"colorWheel\" ref={colorWheelRef}></div>\n      <div id=\"selectedColor\" ref={selectedColorRef}></div>\n      <div id=\"colorInfo\" ref={colorInfoRef}>No color selected</div>\n      <button id=\"voteButton\" ref={voteButtonRef} onClick={sendVote}>Submit</button>\n      <div id=\"loading\" ref={loadingRef} className=\"loading\" style={{ display: isLoading ? \"block\" : \"none\" }}>Loading...</div>\n      <div id=\"results\">\n        <h2>Vote Results</h2>\n        <div id=\"resultsContainer\" ref={resultsContainerRef}></div>\n      </div>\n      {/* Tools Used Section */}\n      <div id=\"toolsUsed\" style={{\n        margin: \"30px 0\",\n        width: \"80%\",\n        maxWidth: 600,\n        background: \"#fffbe7\",\n        borderRadius: 10,\n        boxShadow: \"0 2px 10px rgba(0,0,0,0.05)\",\n        padding: 20\n      }}>\n        <h2 style={{ marginTop: 0 }}>Tools Used</h2>\n        <ul style={{ fontSize: 17, color: \"#444\", lineHeight: 1.7 }}>\n          <li>HTML5 &amp; CSS3</li>\n          <li>Vanilla JavaScript (ES6+)</li>\n          <li>Canvas API (for drawing rainbow and results)</li>\n          <li>AWS Lambda &amp; API Gateway (for backend API)</li>\n          <li>AWS DynamoDB (for vote storage)</li>\n          <li>Fetch API (for HTTP requests)</li>\n          <li>VS Code (for development)</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ColorVotingAPI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}